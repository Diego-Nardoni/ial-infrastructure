AWSTemplateFormatVersion: '2010-09-09'
Description: 'IaL Conversation Memory System - DynamoDB tables for Bedrock conversations'

Parameters:
  ProjectName:
    Type: String
    Default: 'ial'
  Environment:
    Type: String
    Default: 'prod'

Resources:
  # Conversation History Table
  ConversationHistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-conversation-history'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: sort_key
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: sort_key
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: ConversationHistory
        - Key: ManagedBy
          Value: IaL-Framework

  # User Sessions Table
  UserSessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-user-sessions'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: session_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: session_id
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: UserSessions
        - Key: ManagedBy
          Value: IaL-Framework

  # Context Windows Table (for conversation summarization)
  ContextWindowsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-context-windows'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: window_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: window_id
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: ContextWindows
        - Key: ManagedBy
          Value: IaL-Framework

  # Token Usage Tracking Table
  TokenUsageTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-token-usage'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: date_hour
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: date_hour
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: TokenUsageTracking
        - Key: ManagedBy
          Value: IaL-Framework

  # Conversation Cache Table (for response optimization)
  ConversationCacheTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-conversation-cache'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: cache_key
          AttributeType: S
      KeySchema:
        - AttributeName: cache_key
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: ConversationCache
        - Key: ManagedBy
          Value: IaL-Framework

  # IAM Role for Bedrock Conversation Engine
  BedrockConversationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-bedrock-conversation-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - lambda.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BedrockConversationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeModelWithResponseStream
                Resource:
                  - !Sub 'arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-5-sonnet-20241022-v2:0'
                  - !Sub 'arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-haiku-20240307-v1:0'
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt ConversationHistoryTable.Arn
                  - !GetAtt UserSessionsTable.Arn
                  - !GetAtt ContextWindowsTable.Arn
                  - !GetAtt TokenUsageTable.Arn
                  - !GetAtt ConversationCacheTable.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  # CloudWatch Dashboard for Conversation Monitoring
  ConversationDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${ProjectName}-conversation-monitoring'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "text",
              "x": 0,
              "y": 0,
              "width": 24,
              "height": 2,
              "properties": {
                "markdown": "# ðŸ§  IaL Conversation Monitoring Dashboard\n**Real-time Bedrock conversation analytics and cost tracking**"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 2,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/DynamoDB", "ConsumedReadCapacityUnits", "TableName", "${ProjectName}-conversation-history"],
                  [".", "ConsumedWriteCapacityUnits", ".", "."],
                  [".", "ConsumedReadCapacityUnits", "TableName", "${ProjectName}-user-sessions"],
                  [".", "ConsumedWriteCapacityUnits", ".", "."]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "ðŸ“Š DynamoDB Usage",
                "period": 300,
                "stat": "Sum"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 2,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["IaL/Conversations", "TokensUsed", "Model", "sonnet"],
                  [".", ".", ".", "haiku"],
                  [".", "ConversationCount"],
                  [".", "AverageResponseTime"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "ðŸ¤– Bedrock Usage",
                "period": 300,
                "stat": "Sum"
              }
            }
          ]
        }

Outputs:
  ConversationHistoryTableName:
    Description: 'Name of the conversation history table'
    Value: !Ref ConversationHistoryTable
    Export:
      Name: !Sub '${ProjectName}-conversation-history-table'

  UserSessionsTableName:
    Description: 'Name of the user sessions table'
    Value: !Ref UserSessionsTable
    Export:
      Name: !Sub '${ProjectName}-user-sessions-table'

  BedrockConversationRoleArn:
    Description: 'ARN of the Bedrock conversation role'
    Value: !GetAtt BedrockConversationRole.Arn
    Export:
      Name: !Sub '${ProjectName}-bedrock-conversation-role-arn'

  ConversationDashboardURL:
    Description: 'URL to the conversation monitoring dashboard'
    Value: !Sub 'https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${ProjectName}-conversation-monitoring'
    Export:
      Name: !Sub '${ProjectName}-conversation-dashboard-url'
