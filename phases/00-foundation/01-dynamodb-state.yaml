# PHASE 00 - DYNAMODB STATE TABLE
# Estado persistente para rastreamento de recursos (OBRIGATÓRIO)

phase: "00-dynamodb-state"
description: "DynamoDB table for state tracking and IAM role for access"
depends_on: []
estimated_cost_monthly: 0  # PAY_PER_REQUEST
resource_count: 2

# Verificação inicial
pre_check:
  command: "aws dynamodb describe-table --table-name mcp-provisioning-checklist 2>/dev/null"
  on_not_found: "ask_user_to_create"
  
user_prompt: |
  ⚠️  Tabela 'mcp-provisioning-checklist' não encontrada.
  Esta tabela é necessária para rastrear o estado de cada recurso e permitir execução segura.
  
  Posso criar a tabela DynamoDB automaticamente? (y/n)

resources:
  dynamodb_table:
    name: "mcp-provisioning-checklist"
    type: "AWS::DynamoDB::Table"
    creation_method: "aws_cli"  # Usar AWS CLI direto (exceção para bootstrap)
    command: |
      aws dynamodb create-table \
        --table-name mcp-provisioning-checklist \
        --billing-mode PAY_PER_REQUEST \
        --attribute-definitions \
          AttributeName=Project,AttributeType=S \
          AttributeName=ResourceName,AttributeType=S \
          AttributeName=Status,AttributeType=S \
          AttributeName=LastUpdated,AttributeType=S \
        --key-schema \
          AttributeName=Project,KeyType=HASH \
          AttributeName=ResourceName,KeyType=RANGE \
        --global-secondary-indexes \
          'IndexName=StatusIndex,KeySchema=[{AttributeName=Status,KeyType=HASH},{AttributeName=LastUpdated,KeyType=RANGE}],Projection={ProjectionType=ALL}' \
        --tags \
          Key=ManagedBy,Value=MCP \
          Key=Purpose,Value=Checklist-State-Tracking \
          Key=Environment,Value=POC \
          Key=Project,Value={{PROJECT_NAME}}
    
    # IaL v2.0: Enable TTL for auto-release of locks
    post_creation_ttl: |
      aws dynamodb update-time-to-live \
        --table-name mcp-provisioning-checklist \
        --time-to-live-specification "Enabled=true, AttributeName=TTL" \
        --region {{AWS_REGION}}
    
    verification: |
      aws dynamodb describe-table --table-name mcp-provisioning-checklist --query 'Table.TableStatus'
    
    # IaL v2.0: New fields for idempotency and drift detection
    # These fields are added dynamically when items are created/updated:
    # - Version (Number): Optimistic locking version
    # - TTL (Number): Unix timestamp for auto-expiration (locks)
    # - DesiredState (String): JSON snapshot of desired YAML state
    # - CurrentState (String): JSON snapshot of current AWS state
    # - LastReconciliation (String): ISO timestamp of last reconciliation
    # - DriftDetected (Boolean): Flag indicating drift was detected
    # - DriftSeverity (String): CRITICAL|HIGH|MEDIUM|LOW
    # - LockedBy (String): Executor holding the lock (for DEPLOYMENT_LOCK items)
    # - LockTimestamp (String): ISO timestamp when lock was acquired
    
  iam_role:
    name: "mcp-checklist-dynamodb-role"
    type: "AWS::IAM::Role"
    creation_method: "aws_cli"
    command: |
      aws iam create-role \
        --role-name mcp-checklist-dynamodb-role \
        --assume-role-policy-document '{
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {"AWS": "arn:aws:iam::{{AWS_ACCOUNT_ID}}:root"},
            "Action": "sts:AssumeRole"
          }]
        }'
      
      aws iam put-role-policy \
        --role-name mcp-checklist-dynamodb-role \
        --policy-name DynamoDBAccess \
        --policy-document '{
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem",
              "dynamodb:GetItem",
              "dynamodb:UpdateItem",
              "dynamodb:Query",
              "dynamodb:Scan"
            ],
            "Resource": [
              "arn:aws:dynamodb:{{AWS_REGION}}:{{AWS_ACCOUNT_ID}}:table/mcp-provisioning-checklist",
              "arn:aws:dynamodb:{{AWS_REGION}}:{{AWS_ACCOUNT_ID}}:table/mcp-provisioning-checklist/index/*"
            ]
          }]
        }'
    
    verification: |
      aws iam get-role --role-name mcp-checklist-dynamodb-role --query 'Role.RoleName'

# Registrar início do projeto
post_creation:
  command: |
    aws dynamodb put-item \
      --table-name mcp-provisioning-checklist \
      --item '{
        "Project": {"S": "{{PROJECT_NAME}}"},
        "ResourceName": {"S": "PROJECT_INITIALIZATION"},
        "Status": {"S": "Started"},
        "Executor": {"S": "{{EXECUTOR_NAME}}"},
        "LastUpdated": {"S": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"},
        "Region": {"S": "{{AWS_REGION}}"},
        "Version": {"N": "1"},
        "DesiredState": {"S": "{}"},
        "CurrentState": {"S": "{}"},
        "DriftDetected": {"BOOL": false}
      }'

# Comandos de controle de estado
control_commands:
  status:
    command: "/status"
    description: "Mostrar progresso atual do projeto"
    implementation: |
      aws dynamodb scan \
        --table-name mcp-provisioning-checklist \
        --filter-expression "Project = :p" \
        --expression-attribute-values '{":p":{"S":"{{PROJECT_NAME}}"}}' \
        --query "Items[?Status.S=='Verified'] | length(@)" \
        --output text
      
      echo "Progresso: X/60 recursos verificados"
  
  resume:
    command: "/resume"
    description: "Continuar de onde parou (pular recursos Verified)"
    implementation: |
      aws dynamodb query \
        --table-name mcp-provisioning-checklist \
        --key-condition-expression "Project = :p" \
        --filter-expression "#s = :status" \
        --expression-attribute-names '{"#s":"Status"}' \
        --expression-attribute-values '{":p":{"S":"{{PROJECT_NAME}}"},":status":{"S":"Verified"}}' \
        --query "Items[].ResourceName.S"
  
  reset:
    command: "/reset [resource]"
    description: "Resetar status de recurso específico para Pending"
    implementation: |
      aws dynamodb update-item \
        --table-name mcp-provisioning-checklist \
        --key '{"Project":{"S":"{{PROJECT_NAME}}"},"ResourceName":{"S":"[RESOURCE_NAME]"}}' \
        --update-expression "SET #s=:status" \
        --expression-attribute-names '{"#s":"Status"}' \
        --expression-attribute-values '{":status":{"S":"Pending"}}'
  
  audit:
    command: "/audit"
    description: "Mostrar histórico completo de execuções"
    implementation: |
      aws dynamodb scan \
        --table-name mcp-provisioning-checklist \
        --filter-expression "Project = :p" \
        --expression-attribute-values '{":p":{"S":"{{PROJECT_NAME}}"}}' \
        --query "Items[].[ResourceName.S, Status.S, LastUpdated.S, Version.N]"
  
  rollback:
    command: "/rollback"
    description: "Voltar ao último estado estável"
    implementation: |
      # Listar recursos Created mas não Verified
      aws dynamodb query \
        --table-name mcp-provisioning-checklist \
        --key-condition-expression "Project = :p" \
        --filter-expression "#s = :status" \
        --expression-attribute-names '{"#s":"Status"}' \
        --expression-attribute-values '{":p":{"S":"{{PROJECT_NAME}}"},":status":{"S":"Created"}}' \
        --query "Items[].[ResourceName.S, ARN.S]"

# Fluxo obrigatório para cada recurso
resource_workflow:
  step_1_before_generate:
    description: "Registrar status Pending no DynamoDB"
    command: |
      aws dynamodb put-item \
        --table-name mcp-provisioning-checklist \
        --item '{
          "Project": {"S": "{{PROJECT_NAME}}"},
          "ResourceName": {"S": "[RESOURCE_NAME]"},
          "Status": {"S": "Pending"},
          "Executor": {"S": "{{EXECUTOR_NAME}}"},
          "LastUpdated": {"S": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"},
          "Region": {"S": "{{AWS_REGION}}"},
          "Version": {"N": "1"}
        }'
  
  step_2_after_create:
    description: "Atualizar status para Created"
    command: |
      aws dynamodb update-item \
        --table-name mcp-provisioning-checklist \
        --key '{"Project":{"S":"{{PROJECT_NAME}}"},"ResourceName":{"S":"[RESOURCE_NAME]"}}' \
        --update-expression "SET #s=:status, #t=:time, #arn=:arn ADD Version :v" \
        --expression-attribute-names '{"#s":"Status","#t":"LastUpdated","#arn":"ARN"}' \
        --expression-attribute-values '{
          ":status":{"S":"Created"},
          ":time":{"S":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"},
          ":arn":{"S":"[RESOURCE_ARN]"},
          ":v":{"N":"1"}
        }'
  
  step_3_after_verification:
    description: "Atualizar status para Verified"
    command: |
      aws dynamodb update-item \
        --table-name mcp-provisioning-checklist \
        --key '{"Project":{"S":"{{PROJECT_NAME}}"},"ResourceName":{"S":"[RESOURCE_NAME]"}}' \
        --update-expression "SET #s=:status, #t=:time ADD Version :v" \
        --expression-attribute-names '{"#s":"Status","#t":"LastUpdated"}' \
        --expression-attribute-values '{
          ":status":{"S":"Verified"},
          ":time":{"S":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"},
          ":v":{"N":"1"}
        }'
  
  step_4_on_error:
    description: "Registrar falha com mensagem de erro"
    command: |
      aws dynamodb update-item \
        --table-name mcp-provisioning-checklist \
        --key '{"Project":{"S":"{{PROJECT_NAME}}"},"ResourceName":{"S":"[RESOURCE_NAME]"}}' \
        --update-expression "SET #s=:status, #t=:time, #err=:error ADD Version :v" \
        --expression-attribute-names '{"#s":"Status","#t":"LastUpdated","#err":"ErrorMessage"}' \
        --expression-attribute-values '{
          ":status":{"S":"Failed"},
          ":time":{"S":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"},
          ":error":{"S":"[ERROR_DESCRIPTION]"},
          ":v":{"N":"1"}
        }'
