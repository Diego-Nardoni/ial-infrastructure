# PHASE 01 - KMS ENCRYPTION KEY
# Primeiro recurso - usado por todos os outros (CRÍTICO)

phase: "01-kms-security"
description: "KMS key for encryption at rest with automatic rotation"
depends_on: ["00-dynamodb-state"]
estimated_cost_monthly: 1
resource_count: 1

resources:
  kms_key:
    name: "poc-encryption-key"
    resource_name: "01-kms-key"  # Para DynamoDB tracking
    type: "AWS::KMS::Key"
    priority: 1
    
    # STEP 1: Registrar Pending no DynamoDB
    before_generate:
      dynamodb_register_pending: |
        aws dynamodb put-item \
          --table-name mcp-provisioning-checklist \
          --item '{
            "Project": {"S": "{{PROJECT_NAME}}"},
            "ResourceName": {"S": "01-kms-key"},
            "Status": {"S": "Pending"},
            "Executor": {"S": "{{EXECUTOR_NAME}}"},
            "LastUpdated": {"S": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"},
            "Region": {"S": "{{AWS_REGION}}"},
            "Phase": {"S": "01-kms-security"},
            "Version": {"N": "1"}
          }'
    
    # STEP 2: Generate infrastructure code
    mcp_workflow:
      generate_code:
        tool: "generate_infrastructure_code"
        parameters:
          resource_type: "AWS::KMS::Key"
          region: "{{AWS_REGION}}"
          properties:
            Description: "KMS key for POC encryption at rest"
            EnableKeyRotation: true
            KeyPolicy:
              Version: "2012-10-17"
              Statement:
                - Sid: "Enable IAM User Permissions"
                  Effect: "Allow"
                  Principal:
                    AWS: "arn:aws:iam::{{AWS_ACCOUNT_ID}}:root"
                  Action: "kms:*"
                  Resource: "*"
                - Sid: "Allow CloudWatch Logs"
                  Effect: "Allow"
                  Principal:
                    Service: "logs.{{AWS_REGION}}.amazonaws.com"
                  Action:
                    - "kms:Encrypt"
                    - "kms:Decrypt"
                    - "kms:ReEncrypt*"
                    - "kms:GenerateDataKey*"
                    - "kms:DescribeKey"
                  Resource: "*"
                - Sid: "Allow EBS"
                  Effect: "Allow"
                  Principal:
                    Service: "ec2.{{AWS_REGION}}.amazonaws.com"
                  Action:
                    - "kms:Encrypt"
                    - "kms:Decrypt"
                    - "kms:ReEncrypt*"
                    - "kms:GenerateDataKey*"
                    - "kms:CreateGrant"
                    - "kms:DescribeKey"
                  Resource: "*"
                - Sid: "Allow Parameter Store"
                  Effect: "Allow"
                  Principal:
                    Service: "ssm.{{AWS_REGION}}.amazonaws.com"
                  Action:
                    - "kms:Encrypt"
                    - "kms:Decrypt"
                    - "kms:ReEncrypt*"
                    - "kms:GenerateDataKey*"
                    - "kms:DescribeKey"
                  Resource: "*"
            Tags:
              - Key: "Environment"
                Value: "POC"
              - Key: "Project"
                Value: "{{PROJECT_NAME}}"
              - Key: "ManagedBy"
                Value: "MCP"
              - Key: "Owner"
                Value: "{{EXECUTOR_NAME}}"
      
      # STEP 3: Explain (OBRIGATÓRIO mostrar ao usuário)
      explain:
        tool: "explain"
        wait_for_user_confirmation: true
      
      # STEP 4: Create resource
      create:
        tool: "create_resource"
        on_success: "update_dynamodb_created"
        on_error: "update_dynamodb_failed"
    
    # STEP 5: Atualizar DynamoDB para Created
    after_create:
      dynamodb_update_created: |
        aws dynamodb update-item \
          --table-name mcp-provisioning-checklist \
          --key '{"Project":{"S":"{{PROJECT_NAME}}"},"ResourceName":{"S":"01-kms-key"}}' \
          --update-expression "SET #s=:status, #t=:time, #arn=:arn ADD Version :v" \
          --expression-attribute-names '{"#s":"Status","#t":"LastUpdated","#arn":"ARN"}' \
          --expression-attribute-values '{
            ":status":{"S":"Created"},
            ":time":{"S":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"},
            ":arn":{"S":"[DYNAMIC_KMS_KEY_ARN]"},
            ":v":{"N":"1"}
          }'
    
    # STEP 6: Verificar com AWS CLI
    verification:
      command: |
        aws kms describe-key --key-id [DYNAMIC_KMS_KEY_ID] \
          --query 'KeyMetadata.{KeyId:KeyId,KeyRotationStatus:KeyRotationStatus,KeyState:KeyState}'
      
      expected:
        KeyState: "Enabled"
        KeyRotationStatus: true
      
      on_success: "update_dynamodb_verified"
    
    # STEP 7: Atualizar DynamoDB para Verified
    after_verification:
      dynamodb_update_verified: |
        aws dynamodb update-item \
          --table-name mcp-provisioning-checklist \
          --key '{"Project":{"S":"{{PROJECT_NAME}}"},"ResourceName":{"S":"01-kms-key"}}' \
          --update-expression "SET #s=:status, #t=:time ADD Version :v" \
          --expression-attribute-names '{"#s":"Status","#t":"LastUpdated"}' \
          --expression-attribute-values '{
            ":status":{"S":"Verified"},
            ":time":{"S":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"},
            ":v":{"N":"1"}
          }'
      
      mark_checklist: "✅ 1. KMS Key (poc-encryption-key)"
    
    # STEP 8: Em caso de erro
    on_error:
      dynamodb_update_failed: |
        aws dynamodb update-item \
          --table-name mcp-provisioning-checklist \
          --key '{"Project":{"S":"{{PROJECT_NAME}}"},"ResourceName":{"S":"01-kms-key"}}' \
          --update-expression "SET #s=:status, #t=:time, #err=:error ADD Version :v" \
          --expression-attribute-names '{"#s":"Status","#t":"LastUpdated","#err":"ErrorMessage"}' \
          --expression-attribute-values '{
            ":status":{"S":"Failed"},
            ":time":{"S":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"},
            ":error":{"S":"[ERROR_DESCRIPTION]"},
            ":v":{"N":"1"}
          }'

outputs:
  kms_key_id: "[DYNAMIC_KMS_KEY_ID]"
  kms_key_arn: "arn:aws:kms:{{AWS_REGION}}:{{AWS_ACCOUNT_ID}}:key/[DYNAMIC_KMS_KEY_ID]"

rollback:
  command: |
    aws kms schedule-key-deletion --key-id [DYNAMIC_KMS_KEY_ID] --pending-window-in-days 7
  
  dynamodb_update: |
    aws dynamodb update-item \
      --table-name mcp-provisioning-checklist \
      --key '{"Project":{"S":"{{PROJECT_NAME}}"},"ResourceName":{"S":"01-kms-key"}}' \
      --update-expression "SET #s=:status" \
      --expression-attribute-names '{"#s":"Status"}' \
      --expression-attribute-values '{":status":{"S":"RolledBack"}}'
