# PHASE 08: ECS TASK DEFINITION + SERVICE (2 recursos)
# Dependências: IAM Roles, ECR, ECS Cluster, Security Groups, Subnets
# Custo: $180/mês (3 tasks * 512 CPU * 1024 Memory)

project:
  name: "{{PROJECT_NAME}}"
  phase: "08-ecs-task-service"
  executor: "{{EXECUTOR_NAME}}"
  resources: 2

# RECURSO 1: ECS Task Definition
ecs_task_definition:
  workflow:
    step_1_register_pending:
      action: "update_dynamodb"
      table: "mcp-provisioning-checklist"
      item:
        Project: "{{PROJECT_NAME}}"
        ResourceName: "{{PROJECT_NAME}}-task"
        Status: "Pending"
        Phase: "08-ecs-task-service"
        Executor: "{{EXECUTOR_NAME}}"
        Timestamp: "{{current_timestamp}}"
    
    step_2_generate:
      action: "generate_infrastructure_code"
      resource_type: "AWS::ECS::TaskDefinition"
      properties:
        Family: "{{PROJECT_NAME}}-task"
        NetworkMode: "awsvpc"
        RequiresCompatibilities:
          - "FARGATE"
        Cpu: "512"
        Memory: "1024"
        ExecutionRoleArn: "arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{PROJECT_NAME}}-ecsTaskExecutionRole"
        TaskRoleArn: "arn:aws:iam::{{AWS_ACCOUNT_ID}}:role/{{PROJECT_NAME}}-ecsTaskRole"
        ContainerDefinitions:
          - Name: "{{PROJECT_NAME}}"
            Image: "{{AWS_ACCOUNT_ID}}.dkr.ecr.{{AWS_REGION}}.amazonaws.com/{{PROJECT_NAME}}:latest"
            Essential: true
            PortMappings:
              - ContainerPort: 8080
                Protocol: "tcp"
            Environment:
              - Name: "SPRING_PROFILES_ACTIVE"
                Value: "prod"
              - Name: "AWS_XRAY_DAEMON_ADDRESS"
                Value: "xray-daemon:2000"
            Secrets:
              - Name: "REDIS_ENDPOINT"
                ValueFrom: "arn:aws:ssm:{{AWS_REGION}}:{{AWS_ACCOUNT_ID}}:parameter/{{PROJECT_NAME}}/redis/endpoint"
              - Name: "REDIS_PORT"
                ValueFrom: "arn:aws:ssm:{{AWS_REGION}}:{{AWS_ACCOUNT_ID}}:parameter/{{PROJECT_NAME}}/redis/port"
              - Name: "REDIS_SSL"
                ValueFrom: "arn:aws:ssm:{{AWS_REGION}}:{{AWS_ACCOUNT_ID}}:parameter/{{PROJECT_NAME}}/redis/ssl"
            LogConfiguration:
              LogDriver: "awslogs"
              Options:
                awslogs-group: "/ecs/{{PROJECT_NAME}}-task"
                awslogs-region: "{{AWS_REGION}}"
                awslogs-stream-prefix: "ecs"
            HealthCheck:
              Command:
                - "CMD-SHELL"
                - "curl -f http://localhost:8080/actuator/health || exit 1"
              Interval: 30
              Timeout: 5
              Retries: 3
              StartPeriod: 60
          - Name: "xray-daemon"
            Image: "public.ecr.aws/xray/aws-xray-daemon:latest"
            Essential: false
            Cpu: 32
            Memory: 256
            PortMappings:
              - ContainerPort: 2000
                Protocol: "udp"
            LogConfiguration:
              LogDriver: "awslogs"
              Options:
                awslogs-group: "/ecs/{{PROJECT_NAME}}-task"
                awslogs-region: "{{AWS_REGION}}"
                awslogs-stream-prefix: "xray"
        Tags:
          - Key: "Project"
            Value: "{{PROJECT_NAME}}"
          - Key: "ManagedBy"
            Value: "MCP"
    
    step_3_explain:
      action: "explain"
    
    step_4_create:
      action: "create_resource"
    
    step_5_update_created:
      action: "update_dynamodb"
      status: "Created"
      arn: "{{task_definition_arn}}"
    
    step_6_verify:
      action: "aws_cli"
      command: "aws ecs describe-task-definition --task-definition {{PROJECT_NAME}}-task --region {{AWS_REGION}}"
      validation:
        - "taskDefinition.family == '{{PROJECT_NAME}}-task'"
        - "taskDefinition.cpu == '512'"
        - "taskDefinition.memory == '1024'"
    
    step_7_update_verified:
      action: "update_dynamodb"
      status: "Verified"
    
    step_8_on_error:
      action: "update_dynamodb"
      status: "Failed"

# RECURSO 2: ECS Service
ecs_service:
  workflow:
    step_1_register_pending:
      action: "update_dynamodb"
      table: "mcp-provisioning-checklist"
      item:
        Project: "{{PROJECT_NAME}}"
        ResourceName: "{{PROJECT_NAME}}-service"
        Status: "Pending"
        Phase: "08-ecs-task-service"
        Executor: "{{EXECUTOR_NAME}}"
        Timestamp: "{{current_timestamp}}"
    
    step_2_generate:
      action: "generate_infrastructure_code"
      resource_type: "AWS::ECS::Service"
      properties:
        ServiceName: "{{PROJECT_NAME}}-service"
        Cluster: "{{PROJECT_NAME}}-cluster"
        TaskDefinition: "{{PROJECT_NAME}}-task"
        DesiredCount: 3
        LaunchType: "FARGATE"
        PlatformVersion: "LATEST"
        NetworkConfiguration:
          AwsvpcConfiguration:
            Subnets:
              - "{{private_subnet_1a_id}}"
              - "{{private_subnet_1b_id}}"
              - "{{private_subnet_1c_id}}"
            SecurityGroups:
              - "{{sg_app_id}}"
            AssignPublicIp: "DISABLED"
        LoadBalancers:
          - TargetGroupArn: "{{target_group_arn}}"
            ContainerName: "{{PROJECT_NAME}}"
            ContainerPort: 8080
        HealthCheckGracePeriodSeconds: 60
        DeploymentConfiguration:
          MaximumPercent: 200
          MinimumHealthyPercent: 100
          DeploymentCircuitBreaker:
            Enable: true
            Rollback: true
        EnableExecuteCommand: true
        Tags:
          - Key: "Project"
            Value: "{{PROJECT_NAME}}"
          - Key: "ManagedBy"
            Value: "MCP"
    
    step_3_explain:
      action: "explain"
    
    step_4_create:
      action: "create_resource"
    
    step_5_update_created:
      action: "update_dynamodb"
      status: "Created"
      arn: "{{service_arn}}"
    
    step_6_verify:
      action: "aws_cli"
      command: "aws ecs describe-services --cluster {{PROJECT_NAME}}-cluster --services {{PROJECT_NAME}}-service --region {{AWS_REGION}}"
      validation:
        - "services[0].serviceName == '{{PROJECT_NAME}}-service'"
        - "services[0].status == 'ACTIVE'"
        - "services[0].desiredCount == 3"
    
    step_7_update_verified:
      action: "update_dynamodb"
      status: "Verified"
    
    step_8_on_error:
      action: "update_dynamodb"
      status: "Failed"
